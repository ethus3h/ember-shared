#!/usr/bin/env bash
# shellcheck disable=SC1091
source ember_bash_setup &> /dev/null || { printf '%b' '\033[1;31m' >&2; echo "A fatal error was reported on ${BASH_SOURCE[0]} line ${LINENO} in $(pwd): The required dependency ember-shared could not be found (or ember_bash_setup could not be sourced for some other reason)." >&2; printf '%b' '\033[0m' >&2; exit 1; }
#set -x

((EUID)) && exec sudo -- "$0" "$@"

borgLocation="$(ember-getconf BorgLocation)"
borgMountpoint="$(ember-getconf BorgMountpoint)"
referenceLibrary="$(ember-getconf EmberLibrary)/EmberLibraryReference"
repository="ember-library-2"
if [[ "--personal" == "$1" ]] || [[ "-p" == "$1" ]]; then
    shift
    repository="personal-private"
    borgLocation="$borgLocation"-personal
    borgMountpoint="$borgMountpoint"-personal
    referenceLibrary="$referenceLibrary"-personal
fi

if [[ "srsync" == "$1" ]]; then
    borg with-lock "$borgLocation" srsync "$borgLocation" /Ember/$personal/ || die
    cd /Ember/ember-library-2/ || die
    sudo chmod -R a+rwx ./.sreg
    eogup-single || die
    exit 0
fi

trap 'error-notify "A fatal error was reported on ${BASH_SOURCE[0]} line ${LINENO} in $(pwd) at $(emdate)."; exit 1' ERR

BORG_PASSPHRASE="$(ember-getconf BorgPassphrase)"
export BORG_PASSPHRASE

borg config "$borgLocation" append_only 1 &>/dev/null || true

action="$1"
shift
case $action in
init)
    mkdir -p "$borgLocation"
    mkdir -p "$borgMountpoint"
    borg init --encryption=repokey "$borgLocation"
    borg config "$borgLocation" append_only 1
    ;;
savequick)
    tempA="$(tempFile)"
    tempB="$(tempFile)"
    tempC="$(tempFile)"
    pwd > "$tempA"
    printf '%s\0' "$@" > "$tempB"
    emdate > "$tempC"
    tempD="$(tempFile)" # fake file saved if the library is not going to be (to avoid needing complicated code to remove the referenceLibrary argument)
    if [[ -z "$1" ]]; then
        tempD="$referenceLibrary"
    fi
    # FIXME hardcoded username
    borg create --stats --progress --list --filter=AME --compression 'lzma,6' "$borgLocation"'::'"$(emdate)" "$tempA" "$tempB" "$tempC" "$tempD" ~/.bash_history /home/kyan/.bash_history "$@"
    ;;
save)
    tempA="$(tempFile)"
    tempB="$(tempFile)"
    tempC="$(tempFile)"
    pwd > "$tempA"
    printf '%s\0' "$@" > "$tempB"
    emdate > "$tempC"
    tempD="$(tempFile)" # fake file saved if the library is not going to be (to avoid needing complicated code to remove the referenceLibrary argument)
    if [[ -z "$1" ]]; then
        tempD="$referenceLibrary"
    fi
    # FIXME hardcoded username
    borg create --stats --progress --list --filter=AME --compression 'lzma,6' --files-cache disabled "$borgLocation"'::'"$(emdate)" "$tempA" "$tempB" "$tempC" "$tempD" ~/.bash_history /home/kyan/.bash_history "$@"
    ;;
mount)
    borg mount -o allow_other "$borgLocation" "$borgMountpoint"
    ;;
umount)
    borg umount "$borgMountpoint"
    ;;
status)
    borg info "$borgLocation"
    ;;
check|fsck)
    borg check -v -p --verify-data "$borgLocation"
    ;;
*)
    echo "Unknown action."
    exit 1
    ;;
esac
