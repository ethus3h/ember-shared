#!/usr/bin/env bash
# shellcheck disable=SC1091
source ember_bash_setup &> /dev/null || { printf '%b' '\033[1;31m' >&2; echo "A fatal error was reported on ${BASH_SOURCE[0]} line ${LINENO} in $(pwd): The required dependency ember-shared could not be found (or ember_bash_setup could not be sourced for some other reason)." >&2; printf '%b' '\033[0m' >&2; exit 1; }
#set -x

((EUID)) && exec sudo -- "$0" "$@"

trap 'error-notify "A fatal error was reported on ${BASH_SOURCE[0]} line ${LINENO} in $(pwd) at $(emdate)."; exit 1' ERR

action="$1"
case $action in
init)
    mkdir -p "$(ember-getconf BorgLocation)"
    mkdir -p "$(ember-getconf BorgMount)"
    borg init --encryption=repokey "$(ember-getconf BorgLocation)"
    borg config /elements/borg-started-2020m4d7 append_only 1
    ;;
--check)
    streamId="csum-$(date-uuid)"

    finish() {
        if [[ -e "/tmp/${streamId:?}" ]]; then
            rm "/tmp/${streamId:?}"
        fi
    }
    trap 'error-notify "A fatal error was reported on ${BASH_SOURCE[0]} line ${LINENO} in $(pwd) at $(emdate)."; finish; exit 1' ERR
    trap finish EXIT

    offset="2" # original format (no UUID version header)
    possibleUuid="$(head -n 1 "$checksumFile")"
    if [[ "a2b2d0d9-a945-4582-8caa-8151f21fa977" == "$possibleUuid" ]]; then
        # format after version 1.1.4.463
        offset="5"
    elif [[ "8dcee8cf-535a-41b9-9eef-da3b73463939" == "$possibleUuid" ]]; then
        # format after version 1.1.4.464
        offset="6"
    fi

    if [[ -z "$checksumFile" ]]; then
        cat > "/tmp/$streamId"
        tail -n +"$offset" < "/tmp/$streamId" | sponge "/tmp/$streamId"
    else
        tail -n +"$offset" "$checksumFile" > "/tmp/$streamId"
    fi

    if [[ "$(tail -c 1 "/tmp/$streamId" | xxd -p)" == "00" ]]; then
        # FIXME: Auditing null-delimited hash files isn't supported by hashdeep yet. See https://github.com/jessek/hashdeep/issues/384.
        hashdeep -0 -k "/tmp/$streamId" -e -o fbsd -r -l -a -v -v "${pathsToCsum[@]}" || {
                die "Hashdeep failed checksum verification! Reported on ${BASH_SOURCE[0]} line ${LINENO} in $(pwd) at $(emdate). Hashdeep version: $(hashdeep -V)."
            }
    else
       hashdeep -k "/tmp/$streamId" -e -o fbsd -r -l -a -v -v "${pathsToCsum[@]}" || {
                die "Hashdeep failed checksum verification! Reported on ${BASH_SOURCE[0]} line ${LINENO} in $(pwd) at $(emdate). Hashdeep version: $(hashdeep -V)."
            }
    fi
    finish
    ;;
*)
    echo "Unknown action."
    exit 1
    ;;
esac
