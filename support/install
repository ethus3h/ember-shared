#!/usr/bin/env bash
#set -x

# Should work without ember-shared or crystallize, just in case, so don't set traps or source ember_bash_setup

#NOTE: MAINTENANCE: Manual error printing
trap 'printf '\''%b'\'' '\''\033[1;31m'\'' >&2; echo "A fatal error was reported on ${BASH_SOURCE[0]} line ${LINENO} in $(pwd)." >&2; printf '\''%b'\'' '\''\033[0m'\'' >&2; exit 1' ERR

# NOTE: MAINTENANCE: Inlined function from ember_bash_setup
emdate() (
    # If changing this, also change the copy in the error-notify script and possibly also the copy in the emberMacGNUUpgrade script.
    trap 'die "A fatal error was reported on ${BASH_SOURCE[0]} line ${LINENO} in $(pwd)."' ERR

    local temp
    temp="$(date +%Y-%m-%d-%H-%M-%S-%N)_$(xxd -pu <<< "$(date +%z)")"
    echo "${temp//-/}"
)

# NOTE: MAINTENANCE: Inlined function from ember_bash_setup
date-uuid() (
    trap 'die "A fatal error was reported on ${BASH_SOURCE[0]} line ${LINENO} in $(pwd) at $(emdate)."' ERR

    local temp
    temp="$(emdate)-$(python -c 'import uuid; print str(uuid.uuid4())')"
    echo "${temp//-/}"
)

# NOTE: MAINTENANCE: Inlined function from ember_bash_setup
setVariableToCommandOutput() {
    if [[ "$1" == "emSetVariableToCommandOutputVar" ]]; then
        return 1
    fi
    emSetVariableToCommandOutputVar="$1"
    shift
    save_traps="$(trap)"
    trap - ERR
    IFS= read -rd '' "$emSetVariableToCommandOutputVar" < <( "$@" )
    trap 'die "A fatal error was reported on ${BASH_SOURCE[0]} line ${LINENO} in $(pwd) at $(emdate)."' ERR
    eval "$save_traps"
}

# NOTE: MAINTENANCE: Inlined function from ember_bash_setup
eescape() {
    (
        export eescapeString="$1"
        local temp
        # shellcheck disable=SC2016
        setVariableToCommandOutput temp bash -c 'perl -0777 -e '\''print(quotemeta($ENV{eescapeString}))'\'' | sed '\''s/\\$//'\'' | sed '\''s/\\\r/\r/'\'
        temp="${temp//$'\n'/'\n'}"
        printf "%s" "${temp//$'\r'/'\r'}"
    )
}

# NOTE: MAINTENANCE: Inlined function from ember_bash_setup
ereplace() {
    (
        # Perl returns 0 even if it can't find the file (without extra perl code), so test first.
        if [[ ! -e "$3" ]]; then
            die "The target file does not exist."
        fi
        setVariableToCommandOutput ereplaceFrom eescape "$1"
        export ereplaceFrom
        ereplaceTo="$2"
        export ereplaceTo
        perl -0777 -p -i -e 's/$ENV{ereplaceFrom}/$ENV{ereplaceTo}/g' "$3"
    )
}

#### Beginning of Makefile install script template (fragment) ####

packageName="$1"
shift

skipConfigFile="false"
if [[ "$1" == "--skip-config-file" ]]; then
    skipConfigFile="true"
    shift
fi

source support/getDirs

# Done setting up variables, now install the files

mkdir -p "$emberEmberdir"
mkdir -p "$emberBindir"

if [[ -e data ]]; then
    mkdir -p "$emberDatadir/$packageName"
    cp -r data "$emberDatadir/$packageName/"
fi

if [[ -e scripts ]]; then
    mkdir -p "$emberBindir"
    chmod +x scripts/*
    find scripts -maxdepth 1 -type f -exec cp {} "$emberBindir/" \;
fi

if [[ -e docs ]]; then
    # NOT IMPLEMENTED ELSEWHERE
    mkdir -p "$emberDatadir/doc/$packageName"
    cp -r docs/futuramerlin-web-toolkit-output/* "$emberDatadir/doc/$packageName/"
fi

if [[ -e "support/$packageName.conf" ]]; then
    if [[ "$skipConfigFile" == "false" ]]; then
        mkdir -p "$emberSysconfdir"
        cp -v "support/$packageName.conf" "$emberSysconfdir/"
    fi
fi

#### End of Makefile install script template (fragment) ####

ereplace "73FAB73B-EEE4-4992-8622-4F3FCEC9823A" "$(date-uuid)" support/ember.conf
ereplace "/usr/local/var" "$emberSharedstatedir" support/ember.conf
ereplace '/Ember\ Library/' "$emberEmberdir" support/ember.conf
ereplace "/usr/local/etc" "$emberSysconfdir" scripts/ember-getconf

mkdir -p "$emberSharedstatedir"/ember

if [[ ! -h "$emberSharedstatedir/crystallize" ]] && [[ -d "$emberSharedstatedir/crystallize" ]]; then
    mv "$emberSharedstatedir/crystallize" "$emberSharedstatedir/ember"
    ln -s "$emberSharedstatedir/ember" "$emberSharedstatedir/crystallize"
fi

if [[ ! -h "$emberSysconfdir/crystallize.conf" ]] && [[ -f "$emberSysconfdir/crystallize.conf" ]]; then
    mv "$emberSysconfdir/crystallize.conf" "$emberSysconfdir/ember.conf"
    ln -s "$emberSysconfdir/ember.conf" "$emberSysconfdir/crystallize.conf"
fi
