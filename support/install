#!/usr/bin/env bash
#set -x

# Should work without ember-shared or crystallize, just in case, so don't set traps or source ember_bash_setup

#NOTE: MAINTENANCE: Manual error printing
trap 'printf '\''%b'\'' '\''\033[1;31m'\'' >&2; echo "A fatal error was reported on ${BASH_SOURCE[0]} line ${LINENO} in $(pwd)." >&2; printf '\''%b'\'' '\''\033[0m'\'' >&2; exit 1' ERR

# NOTE: MAINTENANCE: Inlined function from ember_bash_setup
emdate() (
    # If changing this, also change the copy in the error-notify script and possibly also the copy in the emberMacGNUUpgrade script.
    trap 'die "A fatal error was reported on ${BASH_SOURCE[0]} line ${LINENO} in $(pwd)."' ERR

    local temp
    temp="$(date +%Y-%m-%d-%H-%M-%S-%N)_$(xxd -pu <<< "$(date +%z)")"
    echo "${temp//-/}"
)

# NOTE: MAINTENANCE: Inlined function from ember_bash_setup
date-uuid() (
    trap 'die "A fatal error was reported on ${BASH_SOURCE[0]} line ${LINENO} in $(pwd) at $(emdate)."' ERR

    local temp
    temp="$(emdate)-$(python -c 'import uuid; print str(uuid.uuid4())')"
    echo "${temp//-/}"
)

# NOTE: MAINTENANCE: Inlined function from ember_bash_setup
setVariableToCommandOutput() {
    if [[ "$1" == "emSetVariableToCommandOutputVar" ]]; then
        return 1
    fi
    emSetVariableToCommandOutputVar="$1"
    shift
    save_traps="$(trap)"
    trap - ERR
    IFS= read -rd '' "$emSetVariableToCommandOutputVar" < <( "$@" )
    trap 'die "A fatal error was reported on ${BASH_SOURCE[0]} line ${LINENO} in $(pwd) at $(emdate)."' ERR
    eval "$save_traps"
}

# NOTE: MAINTENANCE: Inlined function from ember_bash_setup
eescape() {
    (
        export eescapeString="$1"
        local temp
        # shellcheck disable=SC2016
        setVariableToCommandOutput temp bash -c 'perl -0777 -e '\''print(quotemeta($ENV{eescapeString}))'\'' | sed '\''s/\\$//'\'' | sed '\''s/\\\r/\r/'\'
        temp="${temp//$'\n'/'\n'}"
        printf "%s" "${temp//$'\r'/'\r'}"
    )
}

# NOTE: MAINTENANCE: Inlined function from ember_bash_setup
ereplace() {
    (
        # Perl returns 0 even if it can't find the file (without extra perl code), so test first.
        if [[ ! -e "$3" ]]; then
            die "The target file does not exist."
        fi
        setVariableToCommandOutput ereplaceFrom eescape "$1"
        export ereplaceFrom
        ereplaceTo="$2"
        export ereplaceTo
        perl -0777 -p -i -e 's/$ENV{ereplaceFrom}/$ENV{ereplaceTo}/g' "$3"
    )
}

skipConfigFile="false"
if [[ "$1" == "--skip-config-file" ]]; then
    skipConfigFile="true"
    shift
fi

overrideInstalledAppDataDir="/usr/share"
overrideInstalledAppDataDirArg="${1#*=}"
if [[ "$1" == "--override-data-dir="* ]] && [[ -n "$overrideInstalledAppDataDirArg" ]]; then
    overrideInstalledAppDataDir="$overrideInstalledAppDataDirArg"
fi
shift

emberPrefix="$(<support/.prefix)" || true
emberMandir="$(<support/.mandir)" || true
emberInfodir="$(<support/.infodir)" || true
emberDatadir="$(<support/.datadir)" || true
emberSysconfdir="$(<support/.sysconfdir)" || true
emberLocalstatedir="$(<support/.localstatedir)" || true

#echo 1 "$1" 2 "$2" 3 "$3" 4 "$4" 5 "$5" 6 "$6" 7 "$7" 8 "$8" 9 "$9"
if [[ -z "$emberDestdir" ]] && [[ -n "$1" ]]; then
    emberDestdir="$1"
    shift
fi
if [[ -z "$emberPrefix" ]] && [[ -n "$1" ]]; then
    emberPrefix="$1"
    shift
fi
if [[ -z "$emberCapPrefix" ]] && [[ -n "$1" ]]; then
    emberCapPrefix="$1"
    shift
fi
if [[ -z "$emberExecPrefix" ]] && [[ -n "$1" ]]; then
    emberExecPrefix="$1"
    shift
fi
if [[ -z "$emberBindir" ]] && [[ -n "$1" ]]; then
    emberBindir="$1"
    shift
fi
if [[ -z "$emberDatarootdir" ]] && [[ -n "$1" ]]; then
    emberDatarootdir="$1"
    shift
fi
if [[ -z "$emberDatadir" ]] && [[ -n "$1" ]]; then
    emberDatadir="$1"
    shift
fi
if [[ -z "$emberSysconfdir" ]] && [[ -n "$1" ]]; then
    emberSysconfdir="$1"
    shift
fi
if [[ -z "$emberSharedstatedir" ]] && [[ -n "$1" ]]; then
    emberSharedstatedir="$1"
    shift
fi
if [[ -z "$emberPrefix" ]]; then
    if [[ -z "$emberCapPrefix" ]]; then
        emberPrefix=/usr/local
    else
        emberPrefix="$emberCapPrefix"
    fi
fi
emberPrefix="$emberDestdir$emberPrefix"
#echo "emberPrefix: $emberPrefix"
if [[ -z "$emberExecPrefix" ]]; then
    emberExecPrefix="$emberPrefix"
else
    emberExecPrefix="$emberDestdir$emberExecPrefix"
fi
#echo "emberExecPrefix: $emberExecPrefix"
if [[ -z "$emberBindir" ]]; then
    emberBindir="$emberExecPrefix"/bin
fi
#echo "emberBindir: $emberBindir"
if [[ -z "$emberDatarootdir" ]]; then
    emberDatarootdir="$emberPrefix"/share
fi
#echo "emberDatarootdir: $emberDatarootdir"
if [[ -z "$emberDatadir" ]]; then
    emberDatadir="$emberDestdir$emberDatarootdir"
else
    emberDatadir="$emberDestdir$emberDatadir"
fi
#echo "emberDatadir: $emberDatadir"
if [[ -z "$emberSysconfdir" ]]; then
    emberSysconfdir="$emberPrefix"/etc
else
    emberSysconfdir="$emberPrefix$emberSysconfdir"
fi
#echo "emberSysconfdir: $emberSysconfdir"
if [[ -z "$emberSharedstatedir" ]]; then
    emberSharedstatedir="$emberPrefix"/var
else
    emberSharedstatedir="$emberPrefix$emberSharedstatedir"
fi
#echo "emberSharedstatedir: $emberSharedstatedir"

#### End of Makefile install script template ####

emberSharedEmberdir="$emberSharedPrefix"/Ember\ Library

ereplace "73FAB73B-EEE4-4992-8622-4F3FCEC9823A" "$(date-uuid)" support/ember.conf
ereplace "/usr/local/var" "$emberSharedSharedstatedir" support/ember.conf
ereplace '/Ember\ Library/' "$emberSharedEmberdir" support/ember.conf
ereplace "/usr/local/etc" "$emberSharedSysconfdir" scripts/ember-getconf

mkdir -p "$emberSharedEmberdir"
mkdir -p "$emberSharedBindir"
mkdir -p "$emberSharedSharedstatedir"/ember
chmod 777 "$emberSharedSharedstatedir"/ember
mkdir -p "$emberSharedDatadir"/ember
cp -r data/* "$emberSharedDatadir"/ember/
chmod +x scripts/*
cp scripts/* "$emberSharedBindir/"
if [[ "$skipConfigFile" == "false" ]]; then
    mkdir -p "$emberSharedSysconfdir"
    cp -v support/ember.conf "$emberSharedSysconfdir/"
fi

if [[ ! -h "$emberSharedSharedstatedir/crystallize" ]] && [[ -d "$emberSharedSharedstatedir/crystallize" ]]; then
    mv "$emberSharedSharedstatedir/crystallize" "$emberSharedSharedstatedir/ember"
    ln -s "$emberSharedSharedstatedir/ember" "$emberSharedSharedstatedir/crystallize"
fi

if [[ ! -h "$emberSharedSysconfdir/crystallize.conf" ]] && [[ -f "$emberSharedSysconfdir/crystallize.conf" ]]; then
    mv "$emberSharedSysconfdir/crystallize.conf" "$emberSharedSysconfdir/ember.conf"
    ln -s "$emberSharedSysconfdir/ember.conf" "$emberSharedSysconfdir/crystallize.conf"
fi
