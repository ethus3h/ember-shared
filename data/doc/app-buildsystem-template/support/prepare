#!/usr/bin/env bash
# shellcheck disable=SC1091
source ember_bash_setup &> /dev/null
#set -x

trap 'die "A fatal error was reported on ${BASH_SOURCE[0]} line ${LINENO} in $(pwd)."' ERR

packageName="$1"
shift

source support/getDirs

if [[ -z "$(ember-getconf emberSharedVersion)" ]]; then
    #NOTE: MAINTENANCE: Manual error printing
    if [[ -z "$(ember-getconf emberSharedVersion)" ]]; then
        printf '%b' '\033[1;31m' >&2
        echo "ERROR: ember-shared is not properly installed! It must be installed before installing $packageName." >&2
        printf '%b' '\033[0m' >&2
        exit 1
    fi
fi

if [[ "$OSTYPE" = darwin* ]]; then
    if [[ -f "support/prepareForMac" ]]; then
        support/prepareForMac "$packageName"
    fi
fi

substitutePath() {
    export "$2"
    local pathEsc
    pathEsc="$(perl -0777 -e 'print(quotemeta($ENV{'"$2"'}))')"
    echo "pathEsc for $2: $pathEsc"
    find scripts -maxdepth 1 -type f -exec perl -0777 -p -i -e "s/\/usr\/local\/bin/$pathEsc/g" scripts/futuramerlin-web-toolkit-build
}

substitutePath "emberBindir"
export emberBindir
emberBindirEsc="$(perl -0777 -e 'print(quotemeta($ENV{emberBindir}))')"
echo "emberBindirEsc: $emberBindirEsc"
perl -0777 -p -i -e "s/\/usr\/local\/bin/$emberBindirEsc/g" scripts/futuramerlin-web-toolkit-build

export emberSysconfdir
emberSysconfdirEsc="$(perl -0777 -e 'print(quotemeta($ENV{emberSysconfdir}))')"
echo "emberSysconfdirEsc: $emberSysconfdirEsc"
perl -0777 -p -i -e "s/\/usr\/local\/etc/$emberSysconfdirEsc/g" scripts/futuramerlin-web-toolkit-build

export emberDatadir
emberDatadirEsc="$(perl -0777 -e 'print(quotemeta($ENV{emberDatadir}))')"
echo "emberDatadirEsc: $emberDatadirEsc"
perl -0777 -p -i -e "s/\/usr\/local\/share/$emberDatadirEsc/g" scripts/futuramerlin-web-toolkit-build
perl -0777 -p -i -e "s/\/usr\/local\/share/$emberDatadirEsc/g" scripts/futuramerlin-web-toolkit-build-discography

#### End of preparation install script template ####

# Any extra installation prep logic (compilation, etc.) goes here.
