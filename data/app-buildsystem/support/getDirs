#!/usr/bin/env bash
#set -x

# Special getDirs for ember-shared.

# This file should be sourced rather than run directly.

# Should work without ember-shared (or crystallize), just in case, so don't depend on ember_bash_setup or set traps that need it. (ember-shared itself requires this in the installation process, for the core and subsequent modules, and may later require it for the error-notify module also.)

#NOTE: MAINTENANCE: Manual error printing
trap 'printf '\''%b'\'' '\''\033[1;31m'\'' >&2; echo "A fatal error was reported on ${BASH_SOURCE[0]} line ${LINENO} in $(pwd)." >&2; printf '\''%b'\'' '\''\033[0m'\'' >&2; exit 1' ERR

overrideInstalledAppDataDir="/usr/share"
overrideInstalledAppDataDirArg="${1#*=}"
if [[ "$1" == "--override-data-dir"* ]]; then
    shift
    if [[ -n "$overrideInstalledAppDataDirArg" ]]; then
        overrideInstalledAppDataDir="$overrideInstalledAppDataDirArg"
    fi
fi

{ emberPrefix="$(<support/.prefix)" || true; } 2> /dev/null
{ emberMandir="$(<support/.mandir)" || true; } 2> /dev/null
{ emberInfodir="$(<support/.infodir)" || true; } 2> /dev/null
{ emberDatadir="$(<support/.datadir)" || true; } 2> /dev/null
{ emberSysconfdir="$(<support/.sysconfdir)" || true; } 2> /dev/null
{ emberLocalstatedir="$(<support/.localstatedir)" || true; } 2> /dev/null

while [[ -n "$1" ]]; do
    currentArgPrefix="${1%%=*}"
    case $currentArgPrefix in
    --package-name)
        packageName="${1#*=}"
        ;;
    --override-data-dir)
        overrideInstalledAppDataDir="${1#*=}"
        ;;
    --destdir)
        emberDestdir="${1#*=}"
        ;;
    --prefix)
        emberPrefix="${1#*=}"
        ;;
    --PREFIX)
        emberCapPrefix="${1#*=}"
        ;;
    --exec_prefix)
        emberExecPrefix="${1#*=}"
        ;;
    --bindir)
        emberBindir="${1#*=}"
        ;;
    --datarootdir)
        emberDatarootdir="${1#*=}"
        ;;
    --datadir)
        emberDatadir="${1#*=}"
        ;;
    --sysconfdir)
        emberSysconfdir="${1#*=}"
        ;;
    --sharedstatedir)
        emberSharedstatedir="${1#*=}"
        ;;
    *)
        true
        ;;
    esac
    shift
done

if [[ -z "$packageName" ]] && [[ -n "$1" ]] && ! [[ -f "package-name" ]]; then
    packageName="$1"
    shift
else
    packageName="$(<package-name)"
fi

#echo 1 "$1" 2 "$2" 3 "$3" 4 "$4" 5 "$5" 6 "$6" 7 "$7" 8 "$8" 9 "$9"
if [[ -z "$emberDestdir" ]] && [[ -n "$1" ]]; then
    emberDestdir="$1"
    shift
fi
if [[ -z "$emberPrefix" ]] && [[ -n "$1" ]]; then
    emberPrefix="$1"
    shift
fi
if [[ -z "$emberCapPrefix" ]] && [[ -n "$1" ]]; then
    emberCapPrefix="$1"
    shift
fi
if [[ -z "$emberExecPrefix" ]] && [[ -n "$1" ]]; then
    emberExecPrefix="$1"
    shift
fi
if [[ -z "$emberBindir" ]] && [[ -n "$1" ]]; then
    emberBindir="$1"
    shift
fi
if [[ -z "$emberDatarootdir" ]] && [[ -n "$1" ]]; then
    emberDatarootdir="$1"
    shift
fi
if [[ -z "$emberDatadir" ]] && [[ -n "$1" ]]; then
    emberDatadir="$1"
    shift
fi
if [[ -z "$emberSysconfdir" ]] && [[ -n "$1" ]]; then
    emberSysconfdir="$1"
    shift
fi
if [[ -z "$emberSharedstatedir" ]] && [[ -n "$1" ]]; then
    emberSharedstatedir="$1"
    shift
fi
if [[ -z "$emberPrefix" ]]; then
    if [[ -z "$emberCapPrefix" ]]; then
        emberPrefix=/usr/local
    else
        emberPrefix="$emberCapPrefix"
    fi
fi
emberOriginalPrefix="$emberPrefix"
emberPrefix="$emberDestdir$emberPrefix"
#echo "emberPrefix: $emberPrefix"
if [[ -z "$emberExecPrefix" ]]; then
    emberExecPrefix="$emberPrefix"
else
    emberExecPrefix="$emberDestdir$emberExecPrefix"
fi
#echo "emberExecPrefix: $emberExecPrefix"
if [[ -z "$emberBindir" ]]; then
    emberBindir="$emberExecPrefix"/bin
fi
#echo "emberBindir: $emberBindir"
if [[ -z "$emberDatarootdir" ]]; then
    emberDatarootdir="$emberPrefix"/share
fi
#echo "emberDatarootdir: $emberDatarootdir"
if [[ -z "$emberDatadir" ]]; then
    emberDatadir="$emberDatarootdir"
else
    emberDatadir="$emberDestdir$emberDatadir"
fi
#echo "emberDatadir: $emberDatadir"
emberPrefixOrDestdir="$emberPrefix"
if [[ "/usr" == "$emberOriginalPrefix" ]]; then
    # FIXME: hack: what should this actually be?
    # Without it, either Guix tries to write to /etc (instead of in the prefix), or Portage tries to write to /usr/etc
    emberPrefixOrDestdir="$emberDestdir"
fi
if [[ -z "$emberSysconfdir" ]]; then
    emberSysconfdir="$emberPrefixOrDestdir"/etc
else
    emberSysconfdir="$emberPrefixOrDestdir$emberSysconfdir"
fi
#echo "emberSysconfdir: $emberSysconfdir"
if [[ -z "$emberSharedstatedir" ]]; then
    emberSharedstatedir="$emberPrefixOrDestdir"/var
else
    emberSharedstatedir="$emberPrefixOrDestdir$emberSharedstatedir"
fi
#echo "emberSharedstatedir: $emberSharedstatedir"

emberEmberdir="$emberSharedstatedir"/lib/ember

echo "$emberEmberdir" > support/.emberdir

# Done setting up variables
