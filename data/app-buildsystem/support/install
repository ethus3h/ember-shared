#!/usr/bin/env bash
# shellcheck disable=SC1091
source ember_bash_setup_core &> /dev/null || { printf '%b' '\033[1;31m' >&2; echo "A fatal error was reported on ${BASH_SOURCE[0]} line ${LINENO} in $(pwd): The required dependency ember-shared could not be found (or ember_bash_setup_core could not be sourced for some other reason)." >&2; printf '%b' '\033[0m' >&2; exit 1; }
#set -x

trap 'die "A fatal error was reported on ${BASH_SOURCE[0]} line ${LINENO} in $(pwd)."' ERR

skipConfigFile="false"
if [[ "$1" == "--skip-config-file" ]]; then
    skipConfigFile="true"
    shift
fi

source "$(<support/.buildsystemdir)"/support/getDirs

# Done setting up variables, now install the files

mkdir -p "$emberEmberdir"
mkdir -p "$emberBindir"

if ! [[ -e "support/.no-build-data" ]]; then
    if [[ -e data ]]; then
        mkdir -p "$emberDatadir/$packageName"
        cp -r data "$emberDatadir/$packageName/"
    fi
fi

if ! [[ -e "support/.no-build-scripts" ]]; then
    if [[ -e scripts ]]; then
        mkdir -p "$emberBindir"
        chmod +x scripts/*
        find scripts -maxdepth 1 -type f -exec cp {} "$emberBindir/" \;
    fi
fi

if ! [[ -e "support/.no-build-docs" ]]; then
    if [[ -f 'docs/.futuramerlin-web-toolkit/.futuramerlin-web-toolkit.cfg' ]] && [[ -d docs/futuramerlin-web-toolkit-output ]]; then
        mkdir -p "$emberDatadir/doc/$packageName"
        cp -r docs/futuramerlin-web-toolkit-output/* "$emberDatadir/doc/$packageName/"
    elif [[ -d docs ]]; then
        mkdir -p "$emberDatadir/doc/$packageName"
        cp -r docs/* "$emberDatadir/doc/$packageName/"
    fi
fi

if [[ -e "support/$packageName.conf" ]]; then
    if [[ "$skipConfigFile" == "false" ]] && [[ ! -f "$emberSysconfdir/$packageName.conf" ]]; then
        mkdir -p "$emberSysconfdir"
        cp -v "support/$packageName.conf" "$emberSysconfdir/"
    fi
fi

if [[ ! -e "$emberEmberdir" ]]; then
    mkdir -p "$emberEmberdir"/CrystalIndex/
fi

if [[ -e support/post-default-install ]]; then
    source support/post-default-install
fi
